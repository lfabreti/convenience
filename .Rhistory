ess_value <- c(100,200,300,400,500,625,1000)
# initializing some vectors
ks_list <- vector()
ks_mean <- vector()
ks_stddev <- vector()
x <- vector()
# initializing some vectors
ks_list <- vector()
ks_mean <- vector()
ks_stddev <- vector()
x <- vector()
y <- vector()
for (i in 1:length(ess_value)) {
ks_list <- vector()
for (j in 1:10000) {
# Drawing values from a normal distribution
x <- rnorm(ess_value[i])
# Drawing values from a normal distribution
y <- rnorm(ess_value[i])
# Calculates ks-test
ks_list <- c(ks_list, (ks.test(x,y)$statistic))
}
ks_mean <- c(ks_mean, (mean(ks_list)))
ks_stddev <- c(ks_stddev, (sd(ks_list)))
}
plot(ess_value,ks_mean,pch=20, main = "KS tests", ylim=c(0.03,0.20), col=colors_plot[1])
plot(ess_value,ks_mean,pch=20, main = "KS tests", ylim=c(0.03,0.20), col=colors_plot[1])
ess_value
ks_mean
### Checking ks-test for the same normal distributions ###
library(viridis)
colors_plot = viridis(3)
# the ESS values to test
ess_value <- c(100,200,300,400,500,625,1000)
# initializing some vectors
ks_list <- vector()
ks_mean <- vector()
ks_stddev <- vector()
x <- vector()
y <- vector()
for (i in 1:length(ess_value)) {
ks_list <- vector()
for (j in 1:10000) {
# Drawing values from a normal distribution
x <- rnorm(ess_value[i])
# Drawing values from a normal distribution
y <- rnorm(ess_value[i])
# Calculates ks-test
ks_list <- c(ks_list, (ks.test(x,y)$statistic))
}
ks_mean <- c(ks_mean, (mean(ks_list)))
ks_stddev <- c(ks_stddev, (sd(ks_list)))
}
plot(ess_value, ks_mean, pch=20, main = "KS tests", ylim=c(0.03,0.20), col=colors_plot[1])
dev.off()
plot(ess_value, ks_mean, pch=20, main = "KS tests", ylim=c(0.03,0.20), col=colors_plot[1])
point(x=100, y=(1.63/sqrt(100)),pch=8)
points(x=100, y=(1.63/sqrt(100)),pch=8)
text(200, (1.63/sqrt(200)), pch=8)
plot(ess_value, ks_mean, pch=20, main = "KS tests", ylim=c(0.03,0.20), col=colors_plot[1])
points(x=100, y=(1.63/sqrt(100)),pch=8)
points(x=200, y=(1.63/sqrt(200)), pch=8)
points(x=300, y=(1.63/sqrt(300)), pch=8)
points(x=400, y=(1.63/sqrt(400)), pch=8)
points(x=500, y=(1.63/sqrt(500)), pch=8)
points(x=625, y=(1.63/sqrt(625)), pch=8)
points(x=1000, y=(1.63/sqrt(1000)), pch=8)
ks_list <- vector()
ks_mean <- vector()
ks_stddev <- vector()
x <- vector()
y <- vector()
for (i in 1:length(ess_value)) {
ks_list <- vector()
for (j in 1:10000) {
# Drawing values from a normal distribution
x <- rnorm(ess_value[i])
# Drawing values from a normal distribution
y <- rnorm(ess_value[i], mean = 0.05)
# Calculates ks-test
ks_list <- c(ks_list, (ks.test(x,y)$statistic))
}
ks_mean <- c(ks_mean, (mean(ks_list)))
ks_stddev <- c(ks_stddev, (sd(ks_list)))
}
points(ess_value,ks_mean, col=colors_plot[2])
### Checking ks-test for the same normal distributions ###
library(viridis)
colors_plot = viridis(4)
#pdf(file = "ks_score.pdf")
# the ESS values to test
ess_value <- c(100,200,300,400,500,625,1000)
# initializing some vectors
ks_list <- vector()
ks_mean <- vector()
ks_stddev <- vector()
x <- vector()
y <- vector()
for (i in 1:length(ess_value)) {
ks_list <- vector()
for (j in 1:10000) {
# Drawing values from a normal distribution
x <- rnorm(ess_value[i])
# Drawing values from a normal distribution
y <- rnorm(ess_value[i])
# Calculates ks-test
ks_list <- c(ks_list, (ks.test(x,y)$statistic))
}
ks_mean <- c(ks_mean, (mean(ks_list)))
ks_stddev <- c(ks_stddev, (sd(ks_list)))
}
plot(ess_value, ks_mean, pch=20, main = "KS tests", ylim=c(0.03,0.20), col=colors_plot[1])
points(x=100, y=(1.63/sqrt(100)),pch=8)
points(x=200, y=(1.63/sqrt(200)), pch=8)
points(x=300, y=(1.63/sqrt(300)), pch=8)
points(x=400, y=(1.63/sqrt(400)), pch=8)
points(x=500, y=(1.63/sqrt(500)), pch=8)
points(x=625, y=(1.63/sqrt(625)), pch=8)
points(x=1000, y=(1.63/sqrt(1000)), pch=8)
### Checking ks-test for different normal distributions ###
means = c(0.05, 0.1, 0.15)
for (m in 1:length(means)) {
# initializing some vectors
ks_list <- vector()
ks_mean <- vector()
ks_stddev <- vector()
x <- vector()
y <- vector()
for (i in 1:length(ess_value)) {
ks_list <- vector()
for (j in 1:10000) {
# Drawing values from a normal distribution
x <- rnorm(ess_value[i])
# Drawing values from a normal distribution
y <- rnorm(ess_value[i], mean = means[m])
# Calculates ks-test
ks_list <- c(ks_list, (ks.test(x,y)$statistic))
}
ks_mean <- c(ks_mean, (mean(ks_list)))
ks_stddev <- c(ks_stddev, (sd(ks_list)))
}
points(ess_value,ks_mean, col=colors_plot[m+1], pch=20)
}
### Checking ks-test for the same normal distributions ###
library(viridis)
colors_plot = viridis(6)
#pdf(file = "ks_score.pdf")
# the ESS values to test
ess_value <- c(100,200,300,400,500,625,800,1000)
# initializing some vectors
ks_list <- vector()
ks_mean <- vector()
ks_stddev <- vector()
x <- vector()
y <- vector()
for (i in 1:length(ess_value)) {
ks_list <- vector()
for (j in 1:10000) {
# Drawing values from a normal distribution
x <- rnorm(ess_value[i])
# Drawing values from a normal distribution
y <- rnorm(ess_value[i])
# Calculates ks-test
ks_list <- c(ks_list, (ks.test(x,y)$statistic))
}
ks_mean <- c(ks_mean, (mean(ks_list)))
ks_stddev <- c(ks_stddev, (sd(ks_list)))
}
plot(ess_value, ks_mean, pch=20, main = "KS tests", ylim=c(0.03,0.20), col=colors_plot[1])
points(x=100, y=(1.63/sqrt(100)),pch=8)
points(x=200, y=(1.63/sqrt(200)), pch=8)
points(x=300, y=(1.63/sqrt(300)), pch=8)
points(x=400, y=(1.63/sqrt(400)), pch=8)
points(x=500, y=(1.63/sqrt(500)), pch=8)
points(x=625, y=(1.63/sqrt(625)), pch=8)
points(x=1000, y=(1.63/sqrt(1000)), pch=8)
### Checking ks-test for different normal distributions ###
means = c(0.05, 0.1, 0.15, 0.2, 0.25)
for (m in 1:length(means)) {
# initializing some vectors
ks_list <- vector()
ks_mean <- vector()
ks_stddev <- vector()
x <- vector()
y <- vector()
for (i in 1:length(ess_value)) {
ks_list <- vector()
for (j in 1:10000) {
# Drawing values from a normal distribution
x <- rnorm(ess_value[i])
# Drawing values from a normal distribution
y <- rnorm(ess_value[i], mean = means[m])
# Calculates ks-test
ks_list <- c(ks_list, (ks.test(x,y)$statistic))
}
ks_mean <- c(ks_mean, (mean(ks_list)))
ks_stddev <- c(ks_stddev, (sd(ks_list)))
}
points(ess_value,ks_mean, col=colors_plot[m+1], pch=20)
}
### Checking ks-test for the same normal distributions ###
library(viridis)
colors_plot = viridis()
#pdf(file = "ks_score.pdf")
# the ESS values to test
ess_value <- c(100,200,300,400,500,625,800,1000)
# initializing some vectors
ks_list <- vector()
ks_mean <- vector()
ks_stddev <- vector()
x <- vector()
y <- vector()
for (i in 1:length(ess_value)) {
ks_list <- vector()
for (j in 1:10000) {
# Drawing values from a normal distribution
x <- rnorm(ess_value[i])
# Drawing values from a normal distribution
y <- rnorm(ess_value[i])
# Calculates ks-test
ks_list <- c(ks_list, (ks.test(x,y)$statistic))
}
ks_mean <- c(ks_mean, (mean(ks_list)))
ks_stddev <- c(ks_stddev, (sd(ks_list)))
}
plot(ess_value, ks_mean, pch=20, main = "KS tests", ylim=c(0.03,0.20), col=colors_plot[1])
points(x=100, y=(1.63/sqrt(100)),pch=8)
points(x=200, y=(1.63/sqrt(200)), pch=8)
points(x=300, y=(1.63/sqrt(300)), pch=8)
points(x=400, y=(1.63/sqrt(400)), pch=8)
points(x=500, y=(1.63/sqrt(500)), pch=8)
points(x=625, y=(1.63/sqrt(625)), pch=8)
points(x=800, y=(1.63/sqrt(625)), pch=8)
points(x=1000, y=(1.63/sqrt(1000)), pch=8)
### Checking ks-test for different normal distributions ###
means = c(0.05, 0.1, 0.15, 0.2, 0.25)
for (m in 1:length(means)) {
# initializing some vectors
ks_list <- vector()
ks_mean <- vector()
ks_stddev <- vector()
x <- vector()
y <- vector()
for (i in 1:length(ess_value)) {
ks_list <- vector()
for (j in 1:10000) {
# Drawing values from a normal distribution
x <- rnorm(ess_value[i])
# Drawing values from a normal distribution
y <- rnorm(ess_value[i], mean = means[m])
# Calculates ks-test
ks_list <- c(ks_list, (ks.test(x,y)$statistic))
}
ks_mean <- c(ks_mean, (mean(ks_list)))
ks_stddev <- c(ks_stddev, (sd(ks_list)))
}
points(ess_value,ks_mean, col=colors_plot[m+1], pch=20)
}
### Checking ks-test for the same normal distributions ###
library(viridis)
colors_plot = viridis()
#pdf(file = "ks_score.pdf")
# the ESS values to test
ess_value <- c(100,200,300,400,500,625,800,1000)
# initializing some vectors
ks_list <- vector()
ks_mean <- vector()
ks_stddev <- vector()
x <- vector()
y <- vector()
for (i in 1:length(ess_value)) {
ks_list <- vector()
for (j in 1:10000) {
# Drawing values from a normal distribution
x <- rnorm(ess_value[i])
# Drawing values from a normal distribution
y <- rnorm(ess_value[i])
# Calculates ks-test
ks_list <- c(ks_list, (ks.test(x,y)$statistic))
}
ks_mean <- c(ks_mean, (mean(ks_list)))
ks_stddev <- c(ks_stddev, (sd(ks_list)))
}
plot(ess_value, ks_mean, pch=16, main = "KS tests", ylim=c(0.03,0.20), col=colors_plot[1])
points(x=100, y=(1.63/sqrt(100)),pch=8)
points(x=200, y=(1.63/sqrt(200)), pch=8)
points(x=300, y=(1.63/sqrt(300)), pch=8)
points(x=400, y=(1.63/sqrt(400)), pch=8)
points(x=500, y=(1.63/sqrt(500)), pch=8)
points(x=625, y=(1.63/sqrt(625)), pch=8)
points(x=800, y=(1.63/sqrt(625)), pch=8)
points(x=1000, y=(1.63/sqrt(1000)), pch=8)
### Checking ks-test for different normal distributions ###
means = c(0.05, 0.1, 0.15, 0.2, 0.25)
for (m in 1:length(means)) {
# initializing some vectors
ks_list <- vector()
ks_mean <- vector()
ks_stddev <- vector()
x <- vector()
y <- vector()
for (i in 1:length(ess_value)) {
ks_list <- vector()
for (j in 1:10000) {
# Drawing values from a normal distribution
x <- rnorm(ess_value[i])
# Drawing values from a normal distribution
y <- rnorm(ess_value[i], mean = means[m])
# Calculates ks-test
ks_list <- c(ks_list, (ks.test(x,y)$statistic))
}
ks_mean <- c(ks_mean, (mean(ks_list)))
ks_stddev <- c(ks_stddev, (sd(ks_list)))
}
points(ess_value,ks_mean, col=colors_plot[m+1], pch=16)
}
source('~/.active-rstudio-document')
legend("topright",inset = .02, legend = c("0", "0.5", "0.10", "0.15", "0.20", "0.25"), col = colors_plot,title = "Difference in means", lty = 1:2 )
legend("topright",inset = .02, legend = c("0", "0.5", "0.10", "0.15", "0.20", "0.25"), fill = = colors_plot,title = "Difference in means", lty = 1:2 ,box.lty=0, )
legend("topright",inset = .02, legend = c("0", "0.5", "0.10", "0.15", "0.20", "0.25"), fill = colors_plot,title = "Difference in means", lty = 1:2 ,box.lty=0, )
?legend
legend("topright",inset = .02, legend = c("0", "0.5", "0.10", "0.15", "0.20", "0.25"), fill = colors_plot,title = "Difference in means",pch=19 ,box.lty=0, )
legend("topright",inset = .02, legend = c("0", "0.5", "0.10", "0.15", "0.20", "0.25"), col = colors_plot,title = "Difference in means",pch=19 ,box.lty=0, )
### Checking ks-test for the same normal distributions ###
library(viridis)
colors_plot = plasma(6)
#pdf(file = "ks_score.pdf")
# the ESS values to test
ess_value <- c(100,200,300,400,500,625,800,1000)
# initializing some vectors
ks_list <- vector()
ks_mean <- vector()
ks_stddev <- vector()
x <- vector()
y <- vector()
for (i in 1:length(ess_value)) {
ks_list <- vector()
for (j in 1:10000) {
# Drawing values from a normal distribution
x <- rnorm(ess_value[i])
# Drawing values from a normal distribution
y <- rnorm(ess_value[i])
# Calculates ks-test
ks_list <- c(ks_list, (ks.test(x,y)$statistic))
}
ks_mean <- c(ks_mean, (mean(ks_list)))
ks_stddev <- c(ks_stddev, (sd(ks_list)))
}
plot(ess_value, ks_mean, pch=19, main = "KS tests", ylim=c(0.03,0.20), col=colors_plot[1])
points(x=100, y=(1.63/sqrt(100)),pch=8)
points(x=200, y=(1.63/sqrt(200)), pch=8)
points(x=300, y=(1.63/sqrt(300)), pch=8)
points(x=400, y=(1.63/sqrt(400)), pch=8)
points(x=500, y=(1.63/sqrt(500)), pch=8)
points(x=625, y=(1.63/sqrt(625)), pch=8)
points(x=800, y=(1.63/sqrt(625)), pch=8)
points(x=1000, y=(1.63/sqrt(1000)), pch=8)
### Checking ks-test for different normal distributions ###
means = c(0.05, 0.1, 0.15, 0.2, 0.25)
for (m in 1:length(means)) {
# initializing some vectors
ks_list <- vector()
ks_mean <- vector()
ks_stddev <- vector()
x <- vector()
y <- vector()
for (i in 1:length(ess_value)) {
ks_list <- vector()
for (j in 1:10000) {
# Drawing values from a normal distribution
x <- rnorm(ess_value[i])
# Drawing values from a normal distribution
y <- rnorm(ess_value[i], mean = means[m])
# Calculates ks-test
ks_list <- c(ks_list, (ks.test(x,y)$statistic))
}
ks_mean <- c(ks_mean, (mean(ks_list)))
ks_stddev <- c(ks_stddev, (sd(ks_list)))
}
points(ess_value,ks_mean, col=colors_plot[m+1], pch=19)
}
legend("topright",inset = .02, legend = c("0", "0.5", "0.10", "0.15", "0.20", "0.25"), col = colors_plot,title = "Difference in means",pch=19 ,box.lty=0, )
legend("topright", inset = .02, legend = "critical values", pch = 8, box.lty = 0)
legend("top", inset = .02, legend = "critical values", pch = 8, box.lty = 0)
source('~/.active-rstudio-document')
### Checking ks-test for the same normal distributions ###
library(viridis)
colors_plot = plasma(6)
#pdf(file = "ks_score.pdf")
# the ESS values to test
ess_value <- c(100,200,300,400,500,625,800,1000)
# initializing some vectors
ks_list <- vector()
ks_mean <- vector()
ks_stddev <- vector()
x <- vector()
y <- vector()
for (i in 1:length(ess_value)) {
ks_list <- vector()
for (j in 1:10000) {
# Drawing values from a normal distribution
x <- rnorm(ess_value[i])
# Drawing values from a normal distribution
y <- rnorm(ess_value[i])
# Calculates ks-test
ks_list <- c(ks_list, (ks.test(x,y)$statistic))
}
ks_mean <- c(ks_mean, (mean(ks_list)))
ks_stddev <- c(ks_stddev, (sd(ks_list)))
}
plot(ess_value, ks_mean, pch=19, main = "KS tests", ylim=c(0.03,0.20), col=colors_plot[1])
points(x=100, y=(1.63/sqrt(100)),pch=8)
points(x=200, y=(1.63/sqrt(200)), pch=8)
points(x=300, y=(1.63/sqrt(300)), pch=8)
points(x=400, y=(1.63/sqrt(400)), pch=8)
points(x=500, y=(1.63/sqrt(500)), pch=8)
points(x=625, y=(1.63/sqrt(625)), pch=8)
points(x=800, y=(1.63/sqrt(800)), pch=8)
points(x=1000, y=(1.63/sqrt(1000)), pch=8)
### Checking ks-test for different normal distributions ###
means = c(0.05, 0.1, 0.15, 0.2, 0.25)
for (m in 1:length(means)) {
# initializing some vectors
ks_list <- vector()
ks_mean <- vector()
ks_stddev <- vector()
x <- vector()
y <- vector()
for (i in 1:length(ess_value)) {
ks_list <- vector()
for (j in 1:10000) {
# Drawing values from a normal distribution
x <- rnorm(ess_value[i])
# Drawing values from a normal distribution
y <- rnorm(ess_value[i], mean = means[m])
# Calculates ks-test
ks_list <- c(ks_list, (ks.test(x,y)$statistic))
}
ks_mean <- c(ks_mean, (mean(ks_list)))
ks_stddev <- c(ks_stddev, (sd(ks_list)))
}
points(ess_value,ks_mean, col=colors_plot[m+1], pch=19)
}
legend("topright",inset = .02, legend = c("0", "0.5", "0.10", "0.15", "0.20", "0.25"), col = colors_plot,title = "Difference in means",pch=19 ,box.lty=0, )
legend("top", inset = .02, legend = "critical values", pch = 8, box.lty = 0)
source('~/.active-rstudio-document')
library(RColorBrewer)
#colors_plot = plasma(6)
colors_plot = brewer.pal(6, "Blues")
#pdf(file = "ks_score.pdf")
# the ESS values to test
ess_value <- c(100,200,300,400,500,625,800,1000)
# initializing some vectors
ks_list <- vector()
ks_mean <- vector()
ks_stddev <- vector()
x <- vector()
y <- vector()
for (i in 1:length(ess_value)) {
ks_list <- vector()
for (j in 1:10000) {
# Drawing values from a normal distribution
x <- rnorm(ess_value[i])
# Drawing values from a normal distribution
y <- rnorm(ess_value[i])
# Calculates ks-test
ks_list <- c(ks_list, (ks.test(x,y)$statistic))
}
ks_mean <- c(ks_mean, (mean(ks_list)))
ks_stddev <- c(ks_stddev, (sd(ks_list)))
}
plot(ess_value, ks_mean, pch=19, main = "KS tests", ylim=c(0.03,0.20), col=colors_plot[1], xlab = "ESS", ylab = "ks value (D)")
### Checking ks-test for different normal distributions ###
means = c(0.05, 0.1, 0.15, 0.2, 0.25)
for (m in 1:length(means)) {
# initializing some vectors
ks_list <- vector()
ks_mean <- vector()
ks_stddev <- vector()
x <- vector()
y <- vector()
for (i in 1:length(ess_value)) {
ks_list <- vector()
for (j in 1:10000) {
# Drawing values from a normal distribution
x <- rnorm(ess_value[i])
# Drawing values from a normal distribution
y <- rnorm(ess_value[i], mean = means[m])
# Calculates ks-test
ks_list <- c(ks_list, (ks.test(x,y)$statistic))
}
ks_mean <- c(ks_mean, (mean(ks_list)))
ks_stddev <- c(ks_stddev, (sd(ks_list)))
}
points(ess_value,ks_mean, col=colors_plot[m+1], pch=19)
}
points(x=100, y=(1.63/sqrt(100)),pch=8, col="red")
points(x=200, y=(1.63/sqrt(200)), pch=8,col="red")
points(x=300, y=(1.63/sqrt(300)), pch=8, col="red")
points(x=400, y=(1.63/sqrt(400)), pch=8,col="red")
points(x=500, y=(1.63/sqrt(500)), pch=8,col="red")
points(x=625, y=(1.63/sqrt(625)), pch=8,col="red")
points(x=800, y=(1.63/sqrt(800)), pch=8,col="red")
points(x=1000, y=(1.63/sqrt(1000)), pch=8,col="red")
legend("topright",inset = .02, legend = c("0", "0.5", "0.10", "0.15", "0.20", "0.25"), col = colors_plot,title = "Difference in means",pch=19 ,box.lty=0, )
legend("top", inset = .02, legend = "critical values", pch = 8, box.lty = 0)
getwd()
source('~/Projects/convergence_assessment_manuscript/scripts/ks_test_normal.R')
colors_plot[2,7]
colors_plot[2:7]
source('~/Projects/convergence_assessment_manuscript/scripts/ks_test_normal.R')
source('~/Projects/convergence_assessment_manuscript/scripts/ks_test_normal.R')
